(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./docz/getThemeP.mdx":function(e,t,o){"use strict";o.r(t);var n=o("./node_modules/react/index.js"),r=o.n(n),s=o("./node_modules/@mdx-js/tag/dist/index.js"),a=o("./node_modules/docz/dist/index.m.js"),m=o("./src/index.js");function p(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}t.default=function(e){var t=e.components,o=p(e,["components"]);return r.a.createElement(s.MDXTag,{name:"wrapper",components:t},r.a.createElement(s.MDXTag,{name:"h1",components:t,props:{id:"gettheme"}},"getTheme"),r.a.createElement(s.MDXTag,{name:"h2",components:t,props:{id:"depsss"}},"Depsss"),r.a.createElement(s.MDXTag,{name:"blockquote",components:t},r.a.createElement(s.MDXTag,{name:"p",components:t,parentName:"blockquote"},r.a.createElement(s.MDXTag,{name:"strong",components:t,parentName:"p"},"Deps:")," | ",r.a.createElement(s.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"/get-theme"}},"getTheme")," |")),r.a.createElement(s.MDXTag,{name:"h2",components:t,props:{id:"basic-usage"}},"Basic usage"),r.a.createElement(s.MDXTag,{name:"p",components:t},"[add Usage Here]"),r.a.createElement(s.MDXTag,{name:"h2",components:t,props:{id:"example-output"}},"Example Output"),r.a.createElement(a.Playground,{__position:0,__code:"{() => {\n  const defaultTheme = { colors: { red: '#f5222d' } }\n  const { getThemeP } = new Assistant({ defaultTheme })\n  const emptyProps = {}\n  const withProps = { theme: { colors: { blue: 'myBlueColor' } } }\n  let o = {}\n  o.withEmptyProps = getThemeP('colors')(emptyProps) //=>\"red\": \"#f5222d\"\n  o.withProps = getThemeP('colors')(withProps) //=>\"blue\": \"myBlueColor\"\n  o.dotNotation = getThemeP('colors.red')(emptyProps) //=>\"#f5222d\",\n  o.fallsBacktoDefaultTheme = getThemeP('colors.red')(withProps) //=> \"#f5222d\"\n  return (\n    <pre style={{ fontSize: '.8rem' }}>{JSON.stringify(o, undefined, 2)}</pre>\n  )\n}}",__scope:{props:o,Assistant:m.a}},function(){var e=new m.a({defaultTheme:{colors:{red:"#f5222d"}}}).getThemeP,t={},o={theme:{colors:{blue:"myBlueColor"}}},n={};return n.withEmptyProps=e("colors")(t),n.withProps=e("colors")(o),n.dotNotation=e("colors.red")(t),n.fallsBacktoDefaultTheme=e("colors.red")(o),r.a.createElement("pre",{style:{fontSize:".8rem"}},JSON.stringify(n,void 0,2))}))}}}]);